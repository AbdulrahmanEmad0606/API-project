{
	"info": {
		"_postman_id": "8c2593c2-fdab-44a5-a3fb-1d316524eaeb",
		"name": "trello.collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "23975946",
		"_collection_link": "https://www.postman.com/planetary-star-118704/workspace/api-course/collection/23975946-8c2593c2-fdab-44a5-a3fb-1d316524eaeb?action=share&source=collection_link&creator=23975946"
	},
	"item": [
		{
			"name": "Get Boards number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"let myBoards = pm.response.json().idBoards;\r",
							"// validation of boards number \r",
							"pm.test(\"check that the number of created boards greater than 1\",function(){\r",
							"    pm.expect(myBoards.length).to.above(1);\r",
							"})\r",
							"\r",
							"\r",
							"// varaibles for FirstBoardID and LastBoardID\r",
							"pm.collectionVariables.set(\"FirstBoardID\",myBoards[0] );\r",
							"pm.collectionVariables.set(\"LastBoardID\", myBoards[myBoards.length-1]);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/me?boards=open&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"me"
					],
					"query": [
						{
							"key": "boards",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check that the Status code is 200\",function(){\r",
							"    pm.expect(pm.response.status).to.be.equal(\"OK\");\r",
							"    pm.expect(pm.response.code).to.be.equal(200);\r",
							"})\r",
							"\r",
							"// check the value of closed is false\r",
							"let myResponse = pm.response.json();\r",
							"pm.test(\"check the value of closed is false\",function(){\r",
							"    pm.expect(myResponse.closed).to.be.false;\r",
							"})\r",
							"pm.test(\"check the value of permissionLevel is private\",function(){\r",
							"    pm.expect(myResponse.prefs.permissionLevel).to.be.equals(\"private\");\r",
							" })\r",
							"pm.test(\"check the value of canBePublic is true\",function(){\r",
							"    pm.expect(myResponse.prefs.canBePublic).to.be.true;\r",
							"})\r",
							"pm.test(\"check the value of canInvite is true\",function(){\r",
							"    pm.expect(myResponse.prefs.canInvite).to.be.true;\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"name\",\"Sep Plan\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/?key={{key}}&token={{token}}&name={{name}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Lists on a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check that the Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//verify that the number of lists in the response is 3 \r",
							"let myResponse = pm.response.json();\r",
							"pm.test(\"verify that the number of lists in the response is 3\",function(){\r",
							"    pm.expect(myResponse.length).to.be.equal(3);\r",
							"})\r",
							"// set the FirstListID , LastListID\r",
							"pm.collectionVariables.set(\"FirstListID\", myResponse[0].id);\r",
							"pm.collectionVariables.set(\"LastListID\", myResponse[myResponse.length-1].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{FirstBoardID}}/lists?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{FirstBoardID}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check that the status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Verify the following keys exist in the response\r",
							"let myResponse=pm.response.json();\r",
							"pm.test(\"Verify the keys exist in the response\",function(){\r",
							"  pm.expect(myResponse.hasOwnProperty(\"id\")).to.equal(true);\r",
							"  pm.expect(myResponse.hasOwnProperty(\"name\")).to.equal(true);\r",
							"  pm.expect(myResponse.hasOwnProperty(\"idBoard\")).to.equal(true);\r",
							"\r",
							"});\r",
							"\r",
							"// create closed varaible \r",
							"pm.collectionVariables.set(\"archived\", !myResponse.closed);\r",
							"pm.collectionVariables.set(\"unarchived\", myResponse.closed);\r",
							"//Verify the most important parameters and confirm their default values \r",
							"pm.test(\"Verify the most important parameters and confirm their default values\",function(){\r",
							"    pm.expect(myResponse.closed).to.be.false;\r",
							"    pm.expect(myResponse.limits.length).to.be.equal(undefined);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}lists?name=First List&idBoard={{FirstBoardID}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}lists"
					],
					"query": [
						{
							"key": "name",
							"value": "First List"
						},
						{
							"key": "idBoard",
							"value": "{{FirstBoardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive or un-archive a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status code is 200.\r",
							"pm.test(\"check that the Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//get the value of archived and un archive\r",
							"\r",
							"let arch = pm.collectionVariables.get(\"archived\");\r",
							"let unarch = pm.collectionVariables.get(\"unarchived\");\r",
							"\r",
							"// check status of closed key depending on the value param\r",
							"\r",
							"let closed = pm.response.json().closed;\r",
							"pm.test(\"check status of closed key depending on the value param\",function(){\r",
							"    if(closed===true){\r",
							"   pm.expect(closed).to.be.equal(arch);\r",
							"   }\r",
							"   else if(closed===false){\r",
							"   pm.expect(closed).to.be.equal(unarch);\r",
							"\r",
							"   }\r",
							"});\r",
							"\r",
							"// check that the Response Headers include a key called \"Set-Cookie\" and its value contains the text \"isEnterpriseAdmin%3Dfalse\"\r",
							"\r",
							"pm.test(\"the Response Headers include a key called Set-Cookie\",function(){\r",
							"    pm.expect(pm.response.headers.has(\"Set-Cookie\")).to.be.true;\r",
							"})\r",
							"\r",
							"\r",
							"//Set-Cookie has a value contains the text isEnterpriseAdmin%3Dfalse\r",
							"pm.test(\"check that the Set-Cookie has a value contains the text isEnterpriseAdmin%3Dfalse\",function(){\r",
							"    pm.expect(pm.response.headers.get(\"Set-Cookie\")).to.be.include(\"isEnterpriseAdmin%3Dfalse\");\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/lists/{{LastListID}}/closed?key={{key}}&token={{token}}&value={{unarchived}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"lists",
						"{{LastListID}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "value",
							"value": "{{unarchived}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Response Body should contain a meaningful message \r",
							"pm.test(\"check that the Response Body should contain a meaningful message \",function(){\r",
							"   pm.expect(pm.response.json()._value).to.be.equal(\"board is removed successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/{{FirstBoardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						"{{FirstBoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com/1/",
			"type": "string"
		},
		{
			"key": "key",
			"value": "6f63f1a62194b35036daca814df51620",
			"type": "string"
		},
		{
			"key": "token",
			"value": "ATTA2ec0ba07daa89c7a2093b93ea72c638f30420c5be4d19301d191ac80af76db7bC050B8A6",
			"type": "string"
		},
		{
			"key": "FirstBoardID",
			"value": ""
		},
		{
			"key": "LastBoardID",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "FirstListID",
			"value": ""
		},
		{
			"key": "LastListID",
			"value": ""
		},
		{
			"key": "archived",
			"value": ""
		},
		{
			"key": "unarchived",
			"value": ""
		}
	]
}